services:
  redis:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redis:/data

  postgres:
    image: docker.io/postgres:15
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-coalesce}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    command: server /data
    volumes:
      - minio:/data
    ports:
      - '127.0.0.1:9000:9000'
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio}
      - MINIO_ROOT_PASSWORD

  audio-processor:
    profiles: ['process-audio']
    image: coalesce/audio-processor
    restart: unless-stopped
    command: poetry run coalesce_http_worker
    build:
      context: ./audio-processor
      dockerfile: ./Dockerfile
    depends_on:
      - project-server
    ports:
      - '127.0.0.1:3030:3030'
    environment:
      - WORKER_PORT=${WORKER_PORT:-3030}
      - WORKER_KEY

  app:
    image: coalesce/app
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        - VITE_PROJECT_SERVER=${VITE_PROJECT_SERVER:-localhost:3001}
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      - VITE_PROJECT_SERVER=${VITE_PROJECT_SERVER:-localhost:3001}

  project-server:
    image: coalesce/project-server
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./project-server/Dockerfile
    depends_on:
      - redis
      - postgres
      - minio
    ports:
      - '127.0.0.1:3001:3001'
    environment:
      - PROJECT_SERVER_PORT=${PROJECT_SERVER_PORT:-3001}
      - APP_ORIGIN=${APP_ORIGIN:-http://localhost:3000}
      - WORKER_PROXY_ORIGIN=${WORKER_PROXY_ORIGIN:-http://project-server:3001}
      - WORKER_ENDPOINT=${WORKER_ENDPOINT:-http://audio-processor:3030}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - AUDIO_QUEUE_NAME=${AUDIO_QUEUE_NAME:-audio_jobs}
      - AUDIO_PROCESSING_QUEUE_NAME=${AUDIO_PROCESSING_QUEUE_NAME:-audio_jobs_processing}
      - WORKER_KEY
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_URL
      - MINIO_ENDPOINT

volumes:
  minio:
  redis:
  postgres:
