services:
  caddy:
    image: caddy:2.7
    restart: unless-stopped
    ports:
      - '3333:80'
    volumes:
      - ./config/docker/Caddyfile:/etc/caddy/Caddyfile

  redis:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redis:/data

  postgres:
    image: docker.io/postgres:15
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./config/docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD
      - POSTGRES_COALESCE_DB
      - POSTGRES_COALESCE_USER
      - POSTGRES_COALESCE_PASSWORD
      - POSTGRES_KRATOS_DB
      - POSTGRES_KRATOS_USER
      - POSTGRES_KRATOS_PASSWORD

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    command: server /data
    volumes:
      - minio:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio}
      - MINIO_ROOT_PASSWORD

  kratos-migrate:
    image: oryd/kratos:v1.0.0
    volumes:
      - ./config/docker/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    environment:
      - DSN=${KRATOS_POSTGRES_DSN}

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v1.0.0
    environment:
      - PORT=4455
      - KRATOS_PUBLIC_URL=${KRATOS_URL:-http://kratos:4433}
      - KRATOS_BROWSER_URL=${APP_ORIGIN}/auth/api

  kratos:
    depends_on:
      - kratos-migrate
      - mailslurper
    image: oryd/kratos:v1.0.0
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - ./config/docker/kratos:/etc/config/kratos
    environment:
      - LOG_LEVEL=trace
      - DSN=${KRATOS_POSTGRES_DSN}
      - SERVE_PUBLIC_BASE_URL=${APP_ORIGIN}/auth/api
      - SERVE_ADMIN_BASE_URL=http://kratos:4434
      - SELFSERVICE_DEFAULT_BROWSER_RETURN_URL=${APP_ORIGIN}
      - SELFSERVICE_ALLOWED_RETURN_URLS=${APP_ORIGIN}
      - SELFSERVICE_FLOWS_ERROR_UI_URL=${APP_ORIGIN}/auth/error
      - SELFSERVICE_FLOWS_SETTINGS_UI_URL=${APP_ORIGIN}/auth/settings
      - SELFSERVICE_FLOWS_RECOVERY_UI_URL=${APP_ORIGIN}/auth/recovery
      - SELFSERVICE_FLOWS_VERIFICATION_UI_URL=${APP_ORIGIN}/auth/verification
      - SELFSERVICE_FLOWS_LOGIN_UI_URL=${APP_ORIGIN}/auth/login
      - SELFSERVICE_FLOWS_REGISTRATION_UI_URL=${APP_ORIGIN}/auth/registration
      - SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL=${APP_ORIGIN}/auth/login
      - SELFSERVICE_FLOWS_REGISTRATION_ENABLED=${KRATOS_SELFSERVICE_FLOWS_REGISTRATION_ENABLED}
      - SECRETS_COOKIE=${KRATOS_COOKIE_SECRET}
      - SECRETS_CIPHER=${KRATOS_CIPHER_SECRET}
      - COURIER_SMTP_FROM_NAME=${KRATOS_SMTP_FROM_NAME}
      - COURIER_SMTP_FROM_ADDRESS=${KRATOS_SMTP_FROM_ADDRESS}
      - COURIER_SMTP_CONNECTION_URI=${KRATOS_SMTP_URL}

  mailslurper:
    profiles: ['mailslurper']
    image: oryd/mailslurper:latest-smtps
    ports:
      - '127.0.0.1:4436:4436'
      - '127.0.0.1:4437:4437'

  audio-processor:
    profiles: ['process-audio']
    image: coalesce/audio-processor
    restart: unless-stopped
    command: poetry run coalesce_http_worker
    build:
      context: ./audio-processor
      dockerfile: ./Dockerfile
    depends_on:
      - project-server
    environment:
      - WORKER_PORT=${WORKER_PORT:-3030}
      - WORKER_KEY

  audio-processor-runpod:
    profiles: ['process-audio-runpod']
    image: coalesce/audio-processor-runpod
    restart: unless-stopped
    command: poetry run coalesce_runpod_worker --rp_serve_api --rp_api_host 0.0.0.0 --rp_api_port ${WORKER_PORT:-3030}
    build:
      context: ./audio-processor
      dockerfile: ./Dockerfile.runpod
    depends_on:
      - project-server
    environment:
      - WORKER_PORT=${WORKER_PORT:-3030}

  app:
    image: coalesce/app
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        - VITE_PROJECT_SERVER=${APP_ORIGIN}/api
        - VITE_KRATOS_URL=${APP_ORIGIN}/auth/api
        - VITE_AUTH_UI_URL=${APP_ORIGIN}/auth
    environment:
      - VITE_PROJECT_SERVER=${APP_ORIGIN}/api
      - VITE_KRATOS_URL=${APP_ORIGIN}/auth/api
      - VITE_AUTH_UI_URL=${APP_ORIGIN}/auth

  project-server:
    image: coalesce/project-server
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./project-server/Dockerfile
    depends_on:
      - redis
      - postgres
      - minio
      - kratos
    environment:
      - PROJECT_SERVER_PORT=${PROJECT_SERVER_PORT:-3001}
      - APP_ORIGIN=${APP_ORIGIN}
      - KRATOS_URL=${KRATOS_URL:-http://kratos:4433}
      - KRATOS_ADMIN_URL=${KRATOS_ADMIN_URL:-http://kratos:4434}
      - WORKER_PROXY_ORIGIN=${WORKER_PROXY_ORIGIN:-http://project-server:3001}
      - WORKER_ENDPOINT=${WORKER_ENDPOINT:-http://audio-processor:3030}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - AUDIO_QUEUE_NAME=${AUDIO_QUEUE_NAME:-audio_jobs}
      - AUDIO_PROCESSING_QUEUE_NAME=${AUDIO_PROCESSING_QUEUE_NAME:-audio_jobs_processing}
      - WORKER_KEY
      - POSTGRES_DB=${POSTGRES_COALESCE_DB}
      - POSTGRES_USER=${POSTGRES_COALESCE_USER}
      - POSTGRES_PASSWORD=${POSTGRES_COALESCE_PASSWORD}
      - POSTGRES_URL=${POSTGRES_COALESCE_URL}
      - MINIO_ENDPOINT

volumes:
  minio:
  redis:
  postgres:
